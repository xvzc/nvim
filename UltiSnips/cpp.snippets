extends c

##
## Preprocessor
# #include <...>
snippet incc
#include <${1:iostream}>
endsnippet

snippet binc
#include <boost/${1:shared_ptr}.hpp>
endsnippet

##
## STL Collections
# std::array
snippet array
array<${1:T}, ${2:N}> ${3};
endsnippet

# std::vector
snippet vector
vector<${1:T}> ${2};
endsnippet

# std::deque
snippet deque
deque<${1:T}> ${2};
endsnippet

# std::forward_list
snippet flist
forward_list<${1:T}> ${2};
endsnippet

# std::list
snippet list
list<${1:T}> ${2};
endsnippet

# std::set
snippet set
set<${1:T}> ${2};
endsnippet

# std::map
snippet map
map<${1:Key}, ${2:T}> ${3};
endsnippet

# std::multiset
snippet mset
multiset<${1:T}> ${2};
endsnippet

# std::multimap
snippet mmap
multimap<${1:Key}, ${2:T}> ${3};
endsnippet

# std::unordered_set
snippet uset
unordered_set<${1:T}> ${2};
endsnippet

# std::unordered_map
snippet umap
unordered_map<${1:Key}, ${2:T}> ${3};
endsnippet

# std::unordered_multiset
snippet umset
unordered_multiset<${1:T}> ${2};
endsnippet

# std::unordered_multimap
snippet ummap
unordered_multimap<${1:Key}, ${2:T}> ${3};
endsnippet

# std::stack
snippet stack
stack<${1:T}> ${2};
endsnippet

# std::queue
snippet queue
queue<${1:T}> ${2};
endsnippet

# std::priority_queue
snippet pqueue
priority_queue<${1:T}> ${2};
endsnippet

##
## STL smart pointers
# std::shared_ptr
snippet msp
shared_ptr<${1:T}> ${2} = std::make_shared<$1>(${3});
endsnippet

snippet amsp
auto ${1} = make_shared<${2:T}>(${3});
endsnippet

# std::unique_ptr
snippet mup
unique_ptr<${1:T}> ${2} = std::make_unique<$1>(${3});
endsnippet

snippet amup
auto ${1} = make_unique<${2:T}>(${3});
endsnippet

##
## Access Modifiers
# private
snippet pri
private
endsnippet

# protected
snippet pro
protected
endsnippet

# public
snippet pub
public
endsnippet

# friend
snippet fr
friend
endsnippet

# mutable
snippet mu
mutable
endsnippet

##
## Class
# class
snippet cl
class ${1} {
	public:
		$1(${2});
		virtual ~$1();

	protected:
		m_${5}; /*!< ${6:Member description} */
};
endsnippet

snippet ans
namespace {
	${0}
}
endsnippet

##
## Input/Output
# std::cout
snippet cout
cout << ${1} << endl;
endsnippet

# std::cin
snippet cin
cin >> ${1};
endsnippet

##
## Casts
# static
snippet sca
static_cast<${1:unsigned}>(${2:expr})${3}
endsnippet

# dynamic
snippet dca
dynamic_cast<${1:unsigned}>(${2:expr})${3}
endsnippet

# reinterpret
snippet rca
reinterpret_cast<${1:unsigned}>(${2:expr})${3}
endsnippet

# const
snippet cca
const_cast<${1:unsigned}>(${2:expr})${3}
endsnippet

# iterator
snippet iter
for (${1:vector}<${2:type}>::${3:const_iterator} ${4:i} = ${5:container}.begin(); $4 != $5.end(); ++$4) {
	${0}
}
endsnippet

# auto iterator
snippet itera
for (auto ${1:i} = ${2:container}.begin(); $1 != $2.end(); ++$1) {
	${3:cout << *$1 << endl;}
}
endsnippet

# auto iterator
snippet fore
for (auto& ${1:i} : ${2:v}) {
	${0}
}
endsnippet

# exception
snippet exception
endsnippet

snippet try
try {

}catch(${1}) {

}
endsnippet

# miscellneous
snippet fi
first
endsnippet

snippet se
second
endsnippet
